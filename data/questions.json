[
  "How can you debottleneck a process?",
  "What is the devil's advocate?",
  "How can checklists help you?",
  "What is a vertical slice?",
  "What is meant by outside-in test-driven development?",
  "How does test-driven development work?",
  "What does a good documentation look like?",
  "How can value objects help you to code better? What advantages do they bring?",
  "How can you apply encapsulation to reduce the complexity of code?",
  "What are 'drivers for code changes' and how can you use them?",
  "How long should the time between two compilable versions of the code be?",
  "What is Postel's law?",
  "Why should you keep the complexity of code below 7?",
  "What methods are there to continuously watch your code complexity?",
  "What benefits does pair programming have compared to developing alone?",
  "When is pair programming inefficient compared to developing alone?",
  "What is meant by 'Fractal architecture'?",
  "What is dot-driven development and how can you apply it?",
  "What is domain-driven development and how do you differenciate it from behaviour-driven development?",
  "How can you find out, if you have a good name for a variable or function at hand?",
  "Practice some rounds of pair programming!",
  "Practice some rounds of mob programming!",
  "How long is the optimal time span between a feature completion and its review process?",
  "On every review this week ask: Does the code work as intended?",
  "How to validate if the codes intent is clear?",
  "How to find needless duplication?",
  "Could this be simpler?",
  "Are the tests comprehensive?",
  "What are the rules of semantic versioning?",
  "What is meant by 'Strangler pattern'?",
  "Are you sure you really know git?",
  "What is Rubber Ducking?",
  "How can you use bisection to find a solution to a problem?",
  "How can you use git to bisect a problem?",
  "Different people have different opinions about the state of flow. What is yours?",
  "What does 'Management by objective' mean, and how do you know if your manager uses that style? What are the advantages and disadvantages?",
  "What does 'Management by exception' mean, and how do you know if your manager uses that style? What are the advantages and disadvantages?",
  "What is 'Constraint Management', how do you know if your manager uses that style? What are the advantages and disadvantages?",
  "What is the FOCCCUS-formula and how can you apply it to improve the productivity in a process? Can you make up an example in your current work place and situation?",
  "Can you do that in smaller batches?",
  "What does the 'Up to three you are free'-rule mean?",
  "What is the purpose of what you are doing? Does it make you proud?",
  "How can you achieve mastery at your workplace?",
  "How can you achieve autonomy at your workplace?",
  "What is the Separation of Concerns Principle? How does it work?",
  "What is the Open-Closed Principle?",
  "What does the Liskow Substitution Principle say?",
  "What does the Interface Segregation Principle say?",
  "What does the Dependency Inversion Principle say?",
  "What is the Law of Demeter?",
  "What is the Command-Query-Separation-Principle?",
  "What is the Principle of Least Surprise?",
  "Inflicting chaos increases resiliency. How can you use this law to improve your teams overall performance?",
  "What versioning mechanisms can you think of? What are the advantages/disadvantages?",
  "Describe what the thinking tool 'Strategy Tree' looks like! Does your team have a strategy? Explain!",
  "Describe what the thinking tool 'Future Reality Tree' looks like! Does your team have a bright future it can think of? Explain!",
  "Describe what the thinking tool 'Current Reality Tree' looks like! Does your team have a current challenge? Explain!",
  "Describe what the thinking tool 'Evaporating Cloud' looks like! Does your team have a current conflict it might be worth looking at? Explain!",
  "What are the benefits of continuous integration? How could it benefit your team?",
  "What are the benefits of continuous deployment? How could it benefit your team?"
]
